@page
@model LIMS.RegisterModel
@{
    ViewData["Title"] = "Register";
}
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery AntiForgery;

<div id="main-container" class="container w-75">

    <h1>Register</h1>
    <form>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="first-name">First Name</label>
                <input type="text" name="firstName" id="first-name" class="form-control" placeholder="John" data-toggle="tooltip" data-placement="top" title="Cannot be blank">
            </div>
            <div class="form-group col-md-6">
                <label for="last-name">Last Name</label>
                <input type="text" name="lastName" id="last-name" class="form-control" placeholder="Doe" data-toggle="tooltip" data-placement="top" title="Cannot be blank">
            </div>
        </div>
        <div class="form-group">
            <label for="username">Username</label>
            <input type="text" name="username" class="form-control" id="username" placeholder="JohnDoe123" data-toggle="tooltip" data-placement="left" title="Needs six or more alphanumeric characters">
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="password">Password</label>
                <input type="password" name="password" class="form-control" id="password" data-toggle="tooltip" data-placement="left" title="Requires a capital, symbol, digit and six or more characters">
            </div>
            <div class="form-group col-md-6">
                <label for="confirm-password">Confirm Password</label>
                <input type="password" name="confirm-password" class="form-control" id="confirm-password" data-toggle="tooltip" data-placement="right" title="Must match password">
            </div>
        </div>
        <div class="form-group">
            <label for="address">Address</label>
            <input type="text" name="address" class="form-control" id="address" placeholder="1234 Main St" data-toggle="tooltip" data-placement="left" title="Cannot be blank">
        </div>
        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="city">City</label>
                <input type="text" name="city" class="form-control" id="city" placeholder="Examplesburgh" data-toggle="tooltip" data-placement="left" title="Cannot be blank">
            </div>
            <div class="form-group col-md-4">
                <label for="state">State</label>
                <select id="state" name="state" class="form-control">
                    <option value="AL">Alabama</option>
                    <option value="AK">Alaska</option>
                    <option value="AZ">Arizona</option>
                    <option value="AR">Arkansas</option>
                    <option value="CA">California</option>
                    <option value="CO">Colorado</option>
                    <option value="CT">Connecticut</option>
                    <option value="DE">Delaware</option>
                    <option value="DC">District Of Columbia</option>
                    <option value="FL">Florida</option>
                    <option value="GA">Georgia</option>
                    <option value="HI">Hawaii</option>
                    <option value="ID">Idaho</option>
                    <option value="IL">Illinois</option>
                    <option value="IN">Indiana</option>
                    <option value="IA">Iowa</option>
                    <option value="KS">Kansas</option>
                    <option value="KY">Kentucky</option>
                    <option value="LA">Louisiana</option>
                    <option value="ME">Maine</option>
                    <option value="MD">Maryland</option>
                    <option value="MA">Massachusetts</option>
                    <option value="MI">Michigan</option>
                    <option value="MN">Minnesota</option>
                    <option value="MS">Mississippi</option>
                    <option value="MO">Missouri</option>
                    <option value="MT">Montana</option>
                    <option value="NE">Nebraska</option>
                    <option value="NV">Nevada</option>
                    <option value="NH">New Hampshire</option>
                    <option value="NJ">New Jersey</option>
                    <option value="NM">New Mexico</option>
                    <option value="NY">New York</option>
                    <option value="NC">North Carolina</option>
                    <option value="ND">North Dakota</option>
                    <option value="OH">Ohio</option>
                    <option value="OK">Oklahoma</option>
                    <option value="OR">Oregon</option>
                    <option value="PA">Pennsylvania</option>
                    <option value="RI">Rhode Island</option>
                    <option value="SC">South Carolina</option>
                    <option value="SD">South Dakota</option>
                    <option value="TN">Tennessee</option>
                    <option value="TX">Texas</option>
                    <option value="UT">Utah</option>
                    <option value="VT">Vermont</option>
                    <option value="VA">Virginia</option>
                    <option value="WA">Washington</option>
                    <option value="WV">West Virginia</option>
                    <option value="WI">Wisconsin</option>
                    <option value="WY">Wyoming</option>
                </select>
            </div>
            <div class="form-group col-md-2">
                <label for="zip">Zip</label>
                <input type="text" name="zip" class="form-control" id="zip" placeholder="12345" data-toggle="tooltip" data-placement="right" title="5-digit Zip Code, Must contain only digits">
            </div>
        </div>
        <div class="form-group">
            <label for="phone">Phone Number</label>
            <input type="text" name="phone" class="form-control" id="phone" data-toggle="tooltip" data-placement="left" title="10-digit Phone Number, Must contain only digits">
        </div>
        <div class="form-group d-flex">
            <button id="form-submit" type="button" class="btn btn-primary ml-auto">Register!</button>
        </div>
    </form>
</div>

<script>
    $(document).ready(function () {
        // Initialize tooltips
        $(function () {
          $('[data-toggle="tooltip"]').tooltip()
        })

        function markInputInvalid(jQueryElement) {
            return jQueryElement.css("background-color", "#eb6157").addClass("text-white");
        }
        function markInputValid(jQueryElement) {
            return jQueryElement.css("background-color", "#FFFFFF").removeClass("text-white");
        }

        function validateForm(fname, lname, uname, pass1, pass2, addr, city, state, zip, phone) {
            var isValid = true;
            var containsDigitOrSymbol = /([^A-Za-z])/;

            // for password
            var containsCapital = /([A-Z])/;
            var containsSymbol = /([!@@#\$%\^&\*])/;
            var containsNonDigit = /([^0-9])/;
            var containsDigit = /([0-9])/;

            // first name
            if (containsDigitOrSymbol.test(fname) || fname.length < 1) {
                isValid = false;
                markInputInvalid($("#first-name"));
                // update field to indicate error
            } else {
                markInputValid($("#first-name"));
            }
            // last name
            if (containsDigitOrSymbol.test(lname) || lname.length < 1) {
                isValid = false;
                markInputInvalid($("#last-name"));
                // update field to indicate error
            } else {
                markInputValid($("#last-name"));
            }
            // username
            if (containsSymbol.test(uname) || uname.length < 6) {
                isValid = false;
                markInputInvalid($("#username"));
                // update field to indicate error
            } else {
                markInputValid($("#username"));
            }
            // passwords
            if (pass1 !== pass2 || pass1.length < 6
                || !containsCapital.test(pass1)
                || !containsSymbol.test(pass1)
                || !containsDigit.test(pass1)) {
                isValid = false;
                markInputInvalid($("#password"));
                markInputInvalid($("#confirm-password"));
            } else {
                markInputValid($("#password"));
                markInputValid($("#confirm-password"));
            }
            if (address.length < 2) {
                isValid = false;
                markInputInvalid($("#address"));
            } else {
                markInputValid($("#address"));
            }
            if (city.length < 2) {
                isValid = false;
                markInputInvalid($("#city"));
            } else {
                markInputValid($("#city"));
            }
            if (state.length != 2) {
                isValid = false;
                markInputInvalid($("#state"));
            } else {
                markInputValid($("#state"));
            }
            if (zip.length != 5) {
                isValid = false;
                markInputInvalid($("#zip"));
            } else {
                markInputValid($("#zip"));
            }
            if (phone.length != 10 || containsNonDigit.test(phone)) {
                isValid = false;
                markInputInvalid($("#phone"));
            } else {
                markInputValid($("#phone"));
            }
            return isValid;
        }
        // attach event handler to submit button to handle async form submission
        $("#form-submit").on('click', function () {
            // TODO: LOCK SUBMIT BUTTON => change text to "Please wait..."
            $("#form-submit").prop("disabled", true);

            // grab values
            var fname = $("#first-name").val().trim();
            var lname = $("#last-name").val().trim();
            var uname = $("#username").val();
            var pass1 = $("#password").val();
            var pass2 = $("#confirm-password").val();
            var addr = $("#address").val();
            var city = $("#city").val();
            var state = $("#state").val();
            var zip = $("#zip").val();
            var phone = $("#phone").val();

            // Client side validation, don't send request if invalid
            var isValid = validateForm(fname, lname, uname, pass1, pass2, addr, city, state, zip, phone);

            if (isValid) {
                console.log("Valid Form: Starting AJAX");
                $.ajax({
                    type: "POST",
                    url: "Register",
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        'RequestVerificationToken': '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken'
                    },
                    data: JSON.stringify({
                        firstName: fname,
                        lastName: lname,
                        username: uname,
                        password1: pass1,
                        password2: pass2,
                        address: addr,
                        city: city,
                        state: state,
                        zip: zip,
                        phone: phone
                    }),
                    success: function (data) {
                        console.log("Successfully sent ajax request!");
                        console.log(data);
                        var json = JSON.parse(data);
                        if (json.success === "False") {
                            // TODO: CHECK WHAT THE PROBLEM WAS
                            createToast("alert", "There was an error processing your form! Check each field and make sure it's valid.");
                            $("#form-submit").prop("disabled", false);
                        } else {
                            window.location.replace("./Login?success=true");
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        // CHECK REASON FOR ERROR IN data
                        console.log("AJAX POST ERROR");
                        console.log(xhr);
                        console.log(textStatus);
                        console.log(errorThrown);
                        createToast("alert", "There was an internal error processing your form! Please try again later.");
                        $("#form-submit").prop("disabled", false);
                    }
                }); // END of AJAX
            } else {
                console.log("Invalid Form: Aborting AJAX");
                $("#form-submit").prop("disabled", false);
            }
        }); // END of form event handler
    }); // END OF document.ready

</script>

